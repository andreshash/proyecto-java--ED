/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Contenidos.java
 *
 * Created on 9/06/2011, 12:22:33 PM
 */

package proyectofinal;

/**
 *
 * @author oscarbernal93
 */
public class Contenidos extends javax.swing.JFrame {

    /** Creates new form Contenidos */
    public Contenidos() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        teoria = new javax.swing.JTextArea();

        setTitle("Contenidos");

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 16)); // NOI18N
        jLabel1.setText("Temas de Estructuras de Datos");

        jButton1.setText("Listas Simples");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Listas Dobles");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Listas Circulares");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Pilas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Colas");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Arbol Binario");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Arbol AVL");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        teoria.setColumns(20);
        teoria.setFont(new java.awt.Font("MS Gothic", 0, 18)); // NOI18N
        teoria.setRows(5);
        teoria.setAlignmentX(1.5F);
        teoria.setAlignmentY(1.5F);
        jScrollPane1.setViewportView(teoria);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton3))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton5))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton7)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        teoria.setText(" Lista Simple\n\n La lista enlazada básica es la lista enlazada \n simple la cual tiene un enlace por nodo. \n Este enlace apunta al siguiente nodo en la \n lista, o al valor NULL o a la lista vacía,\n si es el último nodo.");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        teoria.setText(" Lista Doble\n\n Un tipo de lista enlazada más sofisticado es \n la lista doblemente enlazada o lista \n enlazadas de dos vías. Cada nodo tiene dos \n enlaces: uno apunta al nodo anterior, o \n apunta al valor NULL si es el primer nodo; \n y otro que apunta al nodo siguiente, o \n apunta al valor NULL si es el último nodo.");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        teoria.setText(" Listas Circulares\n\n En una lista enlazada circular, el primer y \n el último nodo están unidos juntos. Esto se \n puede hacer tanto para listas enlazadas \n simples como para las doblemente enlazadas. \n Para recorrer una lista enlazada circular \n podemos empezar por cualquier nodo y seguir \n la lista en cualquier dirección hasta que \n se regrese hasta el nodo original. Desde \n otro punto de vista, las listas enlazadas \n circulares pueden ser vistas como listas \n sin comienzo ni fin. Este tipo de listas es \n el más usado para dirigir buffers para \n “ingerir” datos, y para visitar todos los \n nodos de una lista a partir de uno dado.");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        teoria.setText(" Pila\n\n Una pila es una estructura de datos en la \n que el modo de acceso a sus elementos es de \n tipo LIFO (del inglés Last In First Out, \n último en entrar, primero en salir)\n que permite almacenar y recuperar datos. \n Esta estructura se aplica en multitud de \n ocasiones en el área de informática debido \n a su simplicidad y ordenación implícita de \n la propia estructura.\n\n Para el manejo de los datos se cuenta con \n dos operaciones básicas: apilar (push), que \n coloca un objeto en la pila, y su operación \n inversa, retirar (o desapilar, pop), que \n retira el último elemento apilado.");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         teoria.setText(" Cola\n\n La cola es una estructura de datos \n simple la cual tiene un enlace por nodo. \n Este enlace apunta al siguiente nodo en la \n Cola, o al valor NULL si es el primer nodo\n la particularidad de esta estructura\n es que los nuevos nodos toman la posicion\n de la cabeza y asi el primer dato\n siempre sera el ultimo.");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        teoria.setText(" Arbol Binario\n\n un árbol binario es una estructura de datos \n en la cual cada nodo siempre tiene un hijo \n izquierdo y un hijo derecho. No pueden \n tener más de dos hijos (de ahí el nombre \n“binario”). Si algún hijo tiene como \n referencia a null, es decir que no almacena \n ningún dato, entonces este es llamado un \n nodo externo. En el caso contrario el hijo \n es llamado un nodo interno. Usos comunes de \n los árboles binarios son los árboles \n binarios de búsqueda, los montículos \n binarios y Codificación de Huffman.");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        teoria.setText(" Arbol AVL\n \n Árbol AVL es un tipo especial de árbol \n binario ideado por los matemáticos rusos \n Adelson-Velskii y Landis. Fue el primer \n árbol de búsqueda binario auto-balanceable \n que se ideó.Los árboles AVL están siempre \n equilibrados de tal modo que para todos los \n nodos, la altura de la rama izquierda no \n difiere en más de una unidad de la altura \n de la rama derecha o viceversa. Gracias a \n esta forma de equilibrio (o balanceo), la \n complejidad de una búsqueda en uno de estos \n árboles se mantiene siempre en orden de \n complejidad O(log n). \n \n El factor de equilibrio puede ser \n almacenado directamente en cada nodo o ser \n computado a partir de las alturas de los \n subárboles.Para conseguir esta propiedad de \n equilibrio, la inserción y el borrado de \n los nodos se ha de realizar de una forma \n especial. Si al realizar una operación de \n inserción o borrado se rompe la condición \n de equilibrio, hay que realizar una serie \n de rotaciones de los nodos.");
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Contenidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea teoria;
    // End of variables declaration//GEN-END:variables

}
